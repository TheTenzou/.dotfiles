# some sets
set -g mouse on
set -sg escape-time 0
set -g history-limit 50000
set -g display-time 4000
set -g xterm-keys on
set -g default-terminal "tmux-256color"
set -ag terminal-overrides ",xterm-256color:RGB"

# status bar
set -g status-style 'bg=#b7bdf8 fg=#181926'
set -g status-left-length 30
set -g status-right "#{?window_bigger,[#{window_offset_x}#,#{window_offset_y}] ,} \"fedowa\" %Y-%m-%d %H:%M"
set-window-option -g window-status-format "#I:#W#(printf '%%s\n' '#F' | tr '-' '<')"
set -g window-status-current-format "[#I:#W]"


set -g base-index 1
setw -g pane-base-index 1

set -g pane-active-border-style 'fg=#b7bdf8'
set -g pane-border-style 'fg=#b7bdf8'

bind C-d detach-client

# switch session
bind -n C-S-p run-shell -b "~/.local/scripts/tmux-sessionizer"
bind -n C-S-f run-shell -b "~/.local/scripts/tmux-session-switcher"
bind -n C-S-I display-popup -E "tmux new-session -A -s scratch -c ~/scratch"

# rebinding prefix
unbind C-b
set-option -g prefix C-n
bind-key C-n send-prefix

bind r source-file ~/.tmux.conf

# select
bind -n C-S-Y copy-mode
set-window-option -g mode-keys vi
bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard'
# bind -T copy-mode-vi o send-keys -X copy-pipe-and-cancel 'xargs ~/src/test-open-remote-nvim/ton.sh #{pane_current_path} >> ~/test.log'
# bind -T copy-mode-vi o send-keys -X copy-pipe-line-and-cancel 'xargs ~/src/test-open-remote-nvim/ton.sh #{pane_current_path} >> ~/test.log'
# bind -T copy-mode-vi o send-keys -X copy-pipe-and-cancel 'echo > ~/test.log'

bind -n C-\: command-prompt
bind -n C-S-\: command-prompt
bind -n C-\; command-prompt
bind -n C-S-\; command-prompt
bind -n C-S-W choose-tree

# splits
bind v split-window -h -c "#{pane_current_path}"
bind C-v split-window -h -c "#{pane_current_path}"
bind x split-window -v -c "#{pane_current_path}" 
bind C-x split-window -v -c "#{pane_current_path}"
bind c new-window
bind C-c new-window

# resize splits
bind -n C-S-K resize-pane -U 2
bind -n C-S-J resize-pane -D 2
bind -n C-S-H resize-pane -L 2
bind -n C-S-L resize-pane -R 2

# move panes
bind -n C-Up swap-pane -U
bind -n C-Down swap-pane -D

# switch windows
bind -n C-Right next-window
bind -n C-Left previous-window

# move windows 
bind -r h swap-window -d -t -1
bind -r l swap-window -d -t +1
bind -r C-h swap-window -d -t -1
bind -r C-l swap-window -d -t +1

# pane movement
bind-key j command-prompt -p "join pane from:"  "join-pane -s '%%'"
bind-key s command-prompt -p "send pane to:"  "join-pane -t '%%'"
bind-key b break-pane

# kill panes
bind -r q kill-pane
bind -r C-q kill-pane


# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l
